{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","markdown","className","value","options","mode","theme","lineNumbers","onChange","editor","data","md","Marked","console","log","setState","dangerouslySetInnerHTML","__html","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAsCeA,E,kDA/BX,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CAACC,SAAU,IAFZ,E,qDAKL,IAAD,OACN,OACE,gCACE,qBAAKC,UAAU,OAAf,SACE,cAAC,eAAD,CACEC,MAAM,sCACNC,QAAS,CACPC,KAAM,WACNC,MAAO,WACPC,aAAa,GAEfC,SAAU,SAACC,EAAQC,EAAMP,GACvB,IAAMQ,EAAKC,IAAOT,GAClBU,QAAQC,IAAIH,GACZ,EAAKI,SAAS,CAACd,SAAUU,SAI/B,qBAAKT,UAAU,QAAQc,wBAAyB,CAACC,OAAQC,KAAKlB,MAAMC,mB,GAxB5DkB,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM5Bb,M","file":"static/js/main.d7d45503.chunk.js","sourcesContent":["import './App.css';\nimport { UnControlled as CodeMirror } from 'react-codemirror2'\nimport Marked from 'marked'\nimport React from 'react';\n\n\nclass App extends React.Component{\n    constructor() {\n      super();\n      this.state = {markdown: ''}\n    }\n\n    render(){\n      return (\n        <div>\n          <div className=\"left\">\n            <CodeMirror\n              value='<h1>I â™¥ react-codemirror2</h1>'\n              options={{\n                mode: 'markdown',\n                theme: 'material',\n                lineNumbers: true,\n              }}\n              onChange={(editor, data, value) => {\n                const md = Marked(value);\n                console.log(md)\n                this.setState({markdown: md})\n              }}\n            />\n          </div>\n          <div className=\"right\" dangerouslySetInnerHTML={{__html: this.state.markdown}} >\n          </div>\n        </div>\n    );\n    }\n    \n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}